/*
 * SilverBox 1.0.0-rc6
 * Flexible alert/modal with zero dependencies
 * https://silverboxjs.ir
 */

"use strict"; function silverBoxDisableScroll(e) { document.querySelectorAll(e).length <= 0 ? document.body.classList.remove("stop-scrolling") : document.body.classList.add("stop-scrolling") } function silverBoxCloseButtonOnClick({ uniqueID: e, timer: t }) { if (t) silverBoxCloseAfterTimeout(e, t); else { let o = document.querySelectorAll(".silverBox-wrapper"); o[o.length - 1] && o[o.length - 1].remove(), silverBoxDisableScroll(".silverBox-overlay") } } function silverBoxCloseAfterTimeout(e, t) { let o = document.querySelector(`[uniqueID="${e}"]`); setTimeout(() => { o && o.remove(), silverBoxDisableScroll(".silverBox-overlay") }, t) } function silverBoxLoadingAnimation() { let e = document.createElement("span"); return e.classList.add("silverBox-button-loading-animation"), e } function silverBoxButtonComponent(e, t, o) { let n = document.createElement("button"); if (n.style.background = e.bgColor, e.bgColor && (n.style.backgroundColor = e.bgColor), e.borderColor && (n.style.borderColor = e.borderColor), e.textColor && (n.style.color = e.textColor), n.classList.add("silverBox-button", t), e.buttonId && (n.id = e.buttonId), e.buttonClass && n.classList.add(e.buttonClass), !0 === e.closeOnClick ? n.onclick = silverBoxCloseButtonOnClick : n.addEventListener("click", () => { n.classList.add("silverBox-loading-button") }), e.iconStart) { let l = document.createElement("img"); l.setAttribute("src", e.iconStart), l.classList.add("silverBox-button-icon"), n.appendChild(l) } let i = document.createElement("span"); if (i.classList.add("silverBox-button-text"), i.textContent = e.text ? e.text : o, n.appendChild(i), n.append(silverBoxLoadingAnimation()), e.iconEnd) { let r = document.createElement("img"); r.setAttribute("src", e.iconEnd), r.classList.add("silverBox-button-icon"), n.appendChild(r) } return n } function silverBoxInputComponent({ type: e, select: t, numberOnly: o, placeHolder: n, readOnly: l, label: i, hint: r, width: s, height: a, maxLength: c, textAlign: d, fontSize: u, placeHolderFontSize: p }) { e = e.toLowerCase(); let v = document.createElement("div"); v.classList.add("silverBox-input"); let x = document.createElement("label"); x.textContent = i; let B = document.createElement("select"); if (B.classList.add("silverBox-select"), t) { let m = []; t.forEach(e => { let t = document.createElement("option"); t.setAttribute("value", e.value ? e.value : ""), t.textContent = e.text ? e.text : e.value, e.disabled && t.setAttribute("disabled", ""), e.selected && t.setAttribute("selected", ""), m.push(t) }), m.forEach(e => { B.append(e) }) } let C; "textarea" !== e ? (C = document.createElement("input"), e && C.setAttribute("type", e)) : C = document.createElement("textArea"); let h = document.createElement("span"); return h.classList.add("silverBox-input-hint"), h.textContent = r, n && C.setAttribute("placeholder", n), c && C.setAttribute("maxlength", c), d && (C.style.textAlign = d), C.style.width = s, C.style.height = a, C.style.fontSize = u, o && C.addEventListener("input", () => { C.value = C.value.replace(/[۰-۹]/g, e => "۰۱۲۳۴۵۶۷۸۹".indexOf(e)).replace(/[^0-9]/g, "") }), p ? p && C.style.setProperty("--silverBox-placeHolder-fontSize", p) : u && C.style.setProperty("--silverBox-placeHolder-fontSize", u), s && (v.style.width = "fit-content"), l && C.setAttribute("readonly", ""), i && v.append(x), t ? v.append(B) : v.appendChild(C), r && v.appendChild(h), v } function silverBoxModalSample({ direction: e, elementsArray: t, overlayClass: o, isInput: n, theme: l = "light", centerContent: i }) { let r = document.createElement("form"); r.classList.add("silverBox-form"), r.addEventListener("submit", e => { e.preventDefault() }); let s = document.createElement("div"); s.classList.add("silverBox-wrapper"), s.classList.add(o), s.setAttribute("data-theme", l); let a = document.createElement("div"); if (a.classList.add("silverBox"), e && a.setAttribute("dir", e), i && (a.style.textAlign = "center"), n ? (t.forEach(e => { r.append(e) }), a.append(r)) : t.forEach(e => { a.append(e) }), 0 !== a.childElementCount && s.append(a), 0 !== s.childElementCount) return s } const silverBoxIconsComponent = ({ alertIcon: e, customIcon: t, isCentred: o = !1, customIconClass: n, customIconId: l }) => { if (t) { let i = silverBoxCreateCustomIcon(t, o, n, l).cloneNode(!0); return i } if (icons[e]) { let r = icons[e].cloneNode(!0); return o && r.classList.add("silverBox-centered-icon"), r } return null }, icons = { warning: createIcon("silverBox-warning", "!"), success: createIcon("silverBox-tick-mark", "", "inside"), info: createIcon("silverBox-info", "i"), error: createIcon("silverBox-error", "", "x"), question: createIcon("silverBox-question", "?") }; function createIcon(e, t, o) { let n = document.createElement("div"); if (n.classList = e, n.classList.add("silverBox-icon"), o) { let l = document.createElement("div"); l.classList = o, n.appendChild(l) } else if (t) { let i = document.createElement("span"); i.textContent = t, n.appendChild(i) } return n } function silverBoxCreateCustomIcon(e, t, o, n) { let l = document.createElement("div"); l.classList.add("silverBox-userIcon-wrapper"); let i = document.createElement("img"); return i.setAttribute("src", e), i.classList.add("silverBox-icon", "silverBox-custom-icon"), n && (i.id = n), o && i.classList.add(o), t && l.classList.add("silverBox-centered-icon"), l.append(i), l } function silverBoxHeaderComponent({ titleText: e, titleAlertIcon: t, titleCustomIcon: o, htmlText: n, simpleText: l, imageSource: i, closeButton: r }) { let s = document.createElement("div"); s.classList.add("silverBox-header-wrapper"); let a = document.createElement("div"); a.classList.add("silverBox-icon-wrapper"); let c = document.createElement("h2"); c.classList.add("silverBox-header-title"); let d = document.createElement("span"); d.textContent = e, o && t || o ? c.append(silverBoxIconsComponent({ customIcon: o })) : c.append(silverBoxIconsComponent({ alertIcon: t }) ? silverBoxIconsComponent({ alertIcon: t }) : ""), c.append(d); let u = document.createElement("div"); u.classList.add("silverBox-header-description"), u.innerHTML = n; let p = document.createElement("p"); p.textContent = l, p.classList.add("silverBox-header-description"); let v = document.createElement("span"); return v.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 512 512"><line x1="368" y1="368" x2="144" y2="144" style="fill:none;stroke:#667085;stroke-linecap:round;stroke-linejoin:round;stroke-width:33px"/><line x1="368" y1="144" x2="144" y2="368" style="fill:none;stroke:#667085;stroke-linecap:round;stroke-linejoin:round;stroke-width:33px"/></svg>', v.onclick = silverBoxCloseButtonOnClick, v.classList.add("silverBox-close-button"), i && a.appendChild(i), r && a.appendChild(v), 0 !== a.childElementCount && s.append(a), e && s.appendChild(c), n && l ? s.appendChild(u) : n ? s.appendChild(u) : l && s.appendChild(p), 0 !== s.childElementCount ? s : "" } function silverBoxFooterComponent({ footerInside: e }) { let t = document.createElement("div"), o = document.createElement("div"); t.classList.add("silverBox-footer"); let n = document.createElement("hr"); return o.innerHTML = e, t.append(n), t.append(o), t } let uniqueNumber = 0; function silverBoxUniqueNumberMaker(e) { let t = Math.floor(Math.random() * e + 1); if (uniqueNumber !== t) return uniqueNumber = t; silverBoxUniqueNumberMaker(e) } function removeAllSilverBoxes(e) { e = e.toLowerCase(); let t = document.querySelectorAll(".silverBox-wrapper"); if ("first" === e && (e = 1), "last" === e && (e = t.length), "all" === e) for (let o = 0; o < t.length; o++)t[o].remove(); else Number(e) > 0 && t[Number(e) - 1].remove() } function silverBoxRemoveLoadings(e) { let t = document.querySelectorAll(".silverBox-button-wrapper"); if (e.toLowerCase(), "first" === e && (e = 1), "last" === e && (e = t.length), "all" === e) for (let o = 0; o < t.length; o++)t[o].childNodes.forEach(e => { e.classList.remove("silverBox-loading-button") }); else Number(e) > 0 && t[Number(e) - 1].childNodes.forEach(e => { e.classList.remove("silverBox-loading-button") }) } function silverBox(e) { if ("removePrevBoxes" in e && removeAllSilverBoxes(e.removePrevBoxes), "removePrevLoadings" in e && silverBoxRemoveLoadings(e.removePrevLoadings), 0 !== Object.keys(e).length) { var t, o; let n = [], l = document.body, i = document.createElement("div"), r = document.createElement("div"); if (r.classList.add("silverBox-button-wrapper"), i.classList.add("silverBox-input-wrapper"), n.push(silverBoxHeaderComponent({ titleText: e.title, htmlText: e.html, simpleText: e.text, titleAlertIcon: e.titleAlertIcon, titleCustomIcon: e.titleCustomIcon, imageSource: silverBoxIconsComponent({ alertIcon: e.alertIcon, customIcon: e.customIcon, isCentred: e.centerContent, customIconClass: e.customIconClass, customIconId: e.customIconId }), closeButton: e.showCloseButton })), "input" in e) { let s = e => ({ type: "type" in e ? e.type : "", select: e.select, numberOnly: e.numberOnly, hint: e.hint, label: e.label, placeHolder: e.placeHolder, readOnly: e.readOnly, width: e.width, height: e.height, maxLength: e.maxLength, textAlign: e.textAlign, fontSize: e.fontSize, placeHolderFontSize: e.placeHolderFontSize }), a = e => { if ("multiplyBy" in e) { e.multiplyBy <= 1 && (e.multiplyBy = 1); for (let t = 1; t <= e.multiplyBy; t++)i.append(silverBoxInputComponent(s(e))) } else i.append(silverBoxInputComponent(s(e))) }; Array.isArray(e.input) ? e.input.forEach(e => { a(e) }) : a(e.input), 0 !== i.childElementCount && n.push(i), "cancelButton" in e ? !1 !== e.cancelButton.showButton && r.append(silverBoxButtonComponent(e.cancelButton, "silverBox-cancel-button", "Cancel")) : r.append(silverBoxButtonComponent(e.cancelButton = { text: "Cancel", closeOnClick: !0 }, "silverBox-cancel-button")) } else "cancelButton" in e ? !1 !== e.cancelButton.showButton && r.append(silverBoxButtonComponent(e.cancelButton, "silverBox-cancel-button", "Cancel")) : "alertIcon" in e && ("question" === e.alertIcon.valueOf() || "warning" === e.alertIcon.valueOf()) && r.append(silverBoxButtonComponent({ text: "Cancel", closeOnClick: !0 }, "silverBox-cancel-button")); "denyButton" in e && !1 !== e.denyButton.showButton && r.append(silverBoxButtonComponent(e.denyButton, "silverBox-deny-button", "Deny")), "confirmButton" in e ? !1 !== e.confirmButton.showButton && r.append(silverBoxButtonComponent(e.confirmButton, "silverBox-confirm-button", "Confirm")) : e.confirmButton = { text: "Confirm", closeOnClick: !0 }, "buttonsDirection" in e && (r.style.direction = e.buttonsDirection), "" != r.innerHTML && n.push(r), e.footer && n.push(silverBoxFooterComponent({ footerInside: e.footer })); t = "position" in e ? `silverBox-${e.position}` : "silverBox-overlay", o = "input" in e, l.append(silverBoxModalSample({ elementsArray: n, overlayClass: t, isInput: o, theme: e.theme, direction: e.direction, centerContent: e.centerContent })); let c = document.querySelectorAll(".silverBox-wrapper"); if (c = c[c.length - 1], "timer" in e) { let d = silverBoxUniqueNumberMaker(1e6); c.setAttribute("uniqueID", d), silverBoxCloseButtonOnClick({ uniqueID: d, timer: e.timer }) } let u = document.querySelector(".silverBox-overlay"); u && u.addEventListener("click", e => { e.target === u && u.remove(), silverBoxDisableScroll(".silverBox-overlay") }), silverBoxDisableScroll(".silverBox-overlay"), "silverBoxId" in e && (c.id = e.silverBoxId), "silverBoxClass" in e && c.classList.add(e.silverBoxClass) } }

export default silverBox